[ {
  "extension" : "revapi.java",
  "id" : "java",
  "configuration" : {
    "missing-classes" : {
      "behavior" : "report",
      "ignoreMissingAnnotations" : false
    }
  }
}, {
  "extension" : "revapi.filter",
  "configuration" : {
    "elements" : {
      "include" : [ {
        "matcher" : "java-package",
        "match" : "io.smallrye.reactive.messaging.kafka"
      } ]
    }
  }
}, {
  "extension" : "revapi.differences",
  "id" : "breaking-changes",
  "configuration" : {
    "criticality" : "highlight",
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
      "differences" : [
          {
              "ignore": true,
              "code": "java.annotation.attributeValueChanged",
              "old": "class io.smallrye.reactive.messaging.kafka.KafkaConnector",
              "new": "class io.smallrye.reactive.messaging.kafka.KafkaConnector",
              "annotationType": "io.smallrye.reactive.messaging.annotations.ConnectorAttributes",
              "attribute": "value",
              "justification": "Added lazy-client, checkpoint.state-store, checkpoint.unsynced-state-max-age.ms and checkpoint.state-type to connector attributes"
          },
          {
              "code": "java.method.removed",
              "old": "method org.eclipse.microprofile.reactive.streams.operators.PublisherBuilder<? extends org.eclipse.microprofile.reactive.messaging.Message<?>> io.smallrye.reactive.messaging.kafka.KafkaConnector::getPublisherBuilder(org.eclipse.microprofile.config.Config)",
              "justification": "Switch from the legacy Reactive Streams APIs to java.util.concurrent.Flow"
          },
          {
              "code": "java.method.removed",
              "old": "method org.eclipse.microprofile.reactive.streams.operators.SubscriberBuilder<? extends org.eclipse.microprofile.reactive.messaging.Message<?>, java.lang.Void> io.smallrye.reactive.messaging.kafka.KafkaConnector::getSubscriberBuilder(org.eclipse.microprofile.config.Config)",
              "justification": "Switch from the legacy Reactive Streams APIs to java.util.concurrent.Flow"
          }
    ]
  }
}, {
  "extension" : "revapi.reporter.json",
  "configuration" : {
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "output" : "target/compatibility.json",
    "indent" : true,
    "append" : false,
    "keepEmptyFile" : true
  }
}, {
  "extension" : "revapi.reporter.text",
  "configuration" : {
    "minSeverity" : "POTENTIALLY_BREAKING",
    "minCriticality" : "documented",
    "output" : "out"
  }
} ]
